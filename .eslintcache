[{"C:\\Users\\zball\\Desktop\\NucampFolder\\3-React\\nucampsite-react\\src\\index.js":"1","C:\\Users\\zball\\Desktop\\NucampFolder\\3-React\\nucampsite-react\\src\\App.js":"2","C:\\Users\\zball\\Desktop\\NucampFolder\\3-React\\nucampsite-react\\src\\reportWebVitals.js":"3","C:\\Users\\zball\\Desktop\\NucampFolder\\3-React\\nucampsite-react\\src\\components\\DirectoryComponent.js":"4","C:\\Users\\zball\\Desktop\\NucampFolder\\3-React\\nucampsite-react\\src\\shared\\campsites.js":"5","C:\\Users\\zball\\Desktop\\NucampFolder\\3-React\\nucampsite-react\\src\\components\\CampsiteInfoComponent.js":"6","C:\\Users\\zball\\Desktop\\NucampFolder\\3-React\\nucampsite-react\\src\\components\\MainComponent.js":"7","C:\\Users\\zball\\Desktop\\NucampFolder\\3-React\\nucampsite-react\\src\\components\\HeaderComponent.js":"8","C:\\Users\\zball\\Desktop\\NucampFolder\\3-React\\nucampsite-react\\src\\components\\FooterComponent.js":"9","C:\\Users\\zball\\Desktop\\NucampFolder\\3-React\\nucampsite-react\\src\\components\\HomeComponent.js":"10","C:\\Users\\zball\\Desktop\\NucampFolder\\3-React\\nucampsite-react\\src\\components\\ContactComponent.js":"11","C:\\Users\\zball\\Desktop\\NucampFolder\\3-React\\nucampsite-react\\src\\shared\\comments.js":"12","C:\\Users\\zball\\Desktop\\NucampFolder\\3-React\\nucampsite-react\\src\\shared\\partners.js":"13","C:\\Users\\zball\\Desktop\\NucampFolder\\3-React\\nucampsite-react\\src\\shared\\promotions.js":"14","C:\\Users\\zball\\Desktop\\NucampFolder\\3-React\\nucampsite-react\\src\\components\\AboutComponent.js":"15","C:\\Users\\zball\\Desktop\\NucampFolder\\3-React\\nucampsite-react\\src\\redux\\configureStore.js":"16","C:\\Users\\zball\\Desktop\\NucampFolder\\3-React\\nucampsite-react\\src\\redux\\campsites.js":"17","C:\\Users\\zball\\Desktop\\NucampFolder\\3-React\\nucampsite-react\\src\\redux\\comments.js":"18","C:\\Users\\zball\\Desktop\\NucampFolder\\3-React\\nucampsite-react\\src\\redux\\partners.js":"19","C:\\Users\\zball\\Desktop\\NucampFolder\\3-React\\nucampsite-react\\src\\redux\\promotions.js":"20","C:\\Users\\zball\\Desktop\\NucampFolder\\3-React\\nucampsite-react\\src\\redux\\ActionTypes.js":"21","C:\\Users\\zball\\Desktop\\NucampFolder\\3-React\\nucampsite-react\\src\\redux\\ActionCreators.js":"22"},{"size":695,"mtime":1612714333741,"results":"23","hashOfConfig":"24"},{"size":620,"mtime":1613401780587,"results":"25","hashOfConfig":"24"},{"size":362,"mtime":1611769385005,"results":"26","hashOfConfig":"24"},{"size":1452,"mtime":1612719986800,"results":"27","hashOfConfig":"24"},{"size":1242,"mtime":1612716645115,"results":"28","hashOfConfig":"24"},{"size":6283,"mtime":1613779971871,"results":"29","hashOfConfig":"24"},{"size":2579,"mtime":1613779756760,"results":"30","hashOfConfig":"24"},{"size":5215,"mtime":1613319178126,"results":"31","hashOfConfig":"24"},{"size":1945,"mtime":1612715961348,"results":"32","hashOfConfig":"24"},{"size":979,"mtime":1612717406714,"results":"33","hashOfConfig":"24"},{"size":11168,"mtime":1613415962085,"results":"34","hashOfConfig":"24"},{"size":4243,"mtime":1612716637413,"results":"35","hashOfConfig":"24"},{"size":1054,"mtime":1612716653388,"results":"36","hashOfConfig":"24"},{"size":303,"mtime":1612716657120,"results":"37","hashOfConfig":"24"},{"size":4061,"mtime":1612721784173,"results":"38","hashOfConfig":"24"},{"size":499,"mtime":1613775653121,"results":"39","hashOfConfig":"24"},{"size":193,"mtime":1613775503457,"results":"40","hashOfConfig":"24"},{"size":457,"mtime":1613779671988,"results":"41","hashOfConfig":"24"},{"size":189,"mtime":1613775541333,"results":"42","hashOfConfig":"24"},{"size":197,"mtime":1613775555192,"results":"43","hashOfConfig":"24"},{"size":41,"mtime":1613779614745,"results":"44","hashOfConfig":"24"},{"size":282,"mtime":1613779646455,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"189k93k",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"48"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"C:\\Users\\zball\\Desktop\\NucampFolder\\3-React\\nucampsite-react\\src\\index.js",[],["95","96"],"C:\\Users\\zball\\Desktop\\NucampFolder\\3-React\\nucampsite-react\\src\\App.js",[],"C:\\Users\\zball\\Desktop\\NucampFolder\\3-React\\nucampsite-react\\src\\reportWebVitals.js",[],"C:\\Users\\zball\\Desktop\\NucampFolder\\3-React\\nucampsite-react\\src\\components\\DirectoryComponent.js",[],"C:\\Users\\zball\\Desktop\\NucampFolder\\3-React\\nucampsite-react\\src\\shared\\campsites.js",[],"C:\\Users\\zball\\Desktop\\NucampFolder\\3-React\\nucampsite-react\\src\\components\\CampsiteInfoComponent.js",["97","98","99","100"],"import React, { Component } from 'react';\r\nimport { Button, Card, CardImg, CardText, CardBody, Breadcrumb, BreadcrumbItem, Label, Modal, ModalHeader, ModalBody } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, Errors, LocalForm } from 'react-redux-form';\r\n\r\nconst maxLength = len => val => !val || (val.length <= len);\r\nconst minLength = len => val => val && (val.length >= len);\r\n\r\nfunction RenderCampsite({campsite}) {              // Prints Details for Site from props\r\n    return(\r\n        <div className=\"col-md-5 m-1\">\r\n            <Card>\r\n                <CardImg top src={campsite.image} alt={campsite.name} />\r\n                <CardBody>\r\n                    <CardText>{campsite.description}</CardText>\r\n                </CardBody>\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction RenderComments({comments, addComment, campsiteId}) {              // Prints Comments for Site\r\n    if (comments) {\r\n        return(\r\n            <div className=\"col-md-5 m-1\">\r\n                <h4>Comments</h4>\r\n                {comments.map(comment => {      // Prints all comments\r\n                    return(\r\n                        <div key={comment.id}> \r\n                            <p>{comment.text} <br />\r\n                            -- {comment.author}, {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(comment.date)))}</p>\r\n                        </div>\r\n                    );\r\n                })}\r\n                <CommentForm campsiteId={campsiteId} addComment={addComment} />\r\n            </div>\r\n        );\r\n    } else {\r\n        return <div />;\r\n    }\r\n}\r\n\r\nclass CommentForm extends Component {\r\n    constructor (props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isModalOpen: false\r\n        }\r\n\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    toggleModal(){\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n\r\n    handleSubmit(values) {\r\n        this.toggleModal();\r\n        this.props.addComment(this.props.campsiteId, values.rating, values.author, values.text);\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <Button outline onClick={this.toggleModal}><i className=\"fa fa-pencil fa-lg\" /> Submit Comment</Button>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\r\n                    <ModalBody>\r\n                        <LocalForm onSubmit={values => this.handleSubmit(values)}>\r\n                            <div className=\"form-group\">\r\n                                <Label htmlFor=\"rating\">Rating</Label>\r\n                                <Control.select model=\".rating\" name=\"rating\" id=\"rating\" className=\"form-control\">\r\n                                    <option>1</option>\r\n                                    <option>2</option>\r\n                                    <option>3</option>\r\n                                    <option>4</option>\r\n                                    <option>5</option>\r\n                                </Control.select>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <Label htmlFor=\"author\">Your Name</Label>\r\n                                <Control.text model=\".author\" name=\"author\" id=\"author\" \r\n                                    className=\"form-control\" \r\n                                    placeholder=\"Your Name\"\r\n                                    validators={{\r\n                                        minLength: minLength(2),\r\n                                        maxLength: maxLength(15)\r\n                                    }}\r\n                                />\r\n                                <Errors\r\n                                    className=\"text-danger\"\r\n                                    model=\".author\"\r\n                                    show=\"touched\"\r\n                                    component=\"div\"\r\n                                    messages={{\r\n                                        minLength: 'Must be at least 2 charcters',\r\n                                        maxLength: 'Must be 15 characters or less'\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <Label htmlFor=\"Comment\">Comment</Label>\r\n                                <Control.textarea model=\".comment\" name=\"comment\" id=\"comment\"\r\n                                    className=\"form-control\" \r\n                                />\r\n                            </div>\r\n                            <Button type=\"submit\" color=\"primary\">Submit</Button>\r\n                        </LocalForm>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nfunction CampsiteInfo(props){                               // Displays panel w/ details & Comments\r\n    if (props.campsite) {         // Evaluates if campsite is selected\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <Breadcrumb>\r\n                            <BreadcrumbItem><Link to=\"/directory\">Directory</Link></BreadcrumbItem>\r\n                            <BreadcrumbItem active>{props.campsite.name}</BreadcrumbItem>\r\n                        </Breadcrumb>\r\n                        <h2>{props.campsite.name}</h2>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <RenderComments \r\n                        comments={props.comments}\r\n                        addComment={props.addComment}\r\n                        campsiteId={props.campsite.id}\r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n    }                \r\n    return <div />;     // Runs only if campsite is null\r\n}\r\n\r\n\r\nexport default CampsiteInfo;","C:\\Users\\zball\\Desktop\\NucampFolder\\3-React\\nucampsite-react\\src\\components\\MainComponent.js",["101","102","103"],"import React, { Component } from 'react';\r\nimport { Navbar, NavbarBrand } from 'reactstrap';\r\nimport Directory from './DirectoryComponent';\r\nimport CampsiteInfo from './CampsiteInfoComponent';\r\nimport Header from './HeaderComponent';\r\nimport Footer from './FooterComponent';\r\nimport Home from './HomeComponent';\r\nimport Contact from './ContactComponent';\r\nimport About from './AboutComponent';\r\nimport { addComment } from '../redux/ActionCreators';\r\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        campsites: state.campsites,\r\n        comments: state.comments,\r\n        partners: state.partners,\r\n        promotions: state.promotions\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    addComment: (campsiteId, rating, author, text) => (addComment(campsiteId, rating, author, text))\r\n};\r\n\r\nclass Main extends Component {\r\n    \r\n    render() {\r\n\r\n        const HomePage = () => {\r\n            return (\r\n                <Home\r\n                    campsite={this.props.campsites.filter(campsite => campsite.featured)[0]}\r\n                    promotion={this.props.promotions.filter(promotion => promotion.featured)[0]}\r\n                    partner={this.props.partners.filter(partner => partner.featured)[0]}\r\n                />\r\n            )\r\n        }\r\n\r\n        const CampsiteWithId = ({match}) => {\r\n            return (\r\n                <CampsiteInfo \r\n                    campsite={this.props.campsites.filter(campsite => campsite.id === +match.params.campsiteId)[0]} \r\n                    comments={this.props.comments.filter(comment => comment.campsiteId === +match.params.campsiteId)}\r\n                    addComment={this.props.addComment}\r\n                />\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <Header />\r\n                <Switch>\r\n                    <Route path='/home' component={HomePage} />\r\n                    <Route exact path='/directory' render={() => <Directory campsites={this.props.campsites} />} />\r\n                    <Route path='/directory/:campsiteId' component={CampsiteWithId} />\r\n                    <Route exact path='/aboutus' render={() => <About partners={this.props.partners} />} />\r\n                    <Route exact path='/contactus' component={Contact} />\r\n                    <Redirect to='/home' />\r\n                </Switch>              \r\n                <Footer />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps)(Main));","C:\\Users\\zball\\Desktop\\NucampFolder\\3-React\\nucampsite-react\\src\\components\\HeaderComponent.js",[],"C:\\Users\\zball\\Desktop\\NucampFolder\\3-React\\nucampsite-react\\src\\components\\FooterComponent.js",[],"C:\\Users\\zball\\Desktop\\NucampFolder\\3-React\\nucampsite-react\\src\\components\\HomeComponent.js",[],"C:\\Users\\zball\\Desktop\\NucampFolder\\3-React\\nucampsite-react\\src\\components\\ContactComponent.js",["104","105","106","107","108","109","110"],"import React, { Component } from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Button, Label, Col, Row } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\n\r\nconst required = val => val && val.length;\r\nconst maxLength = len => val => !val || (val.length <= len);\r\nconst minLength = len => val => val && (val.length >= len);\r\nconst isNumber = val => !isNaN(+val);\r\nconst validEmail = val => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nclass Contact extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            firstName: '',\r\n            lastName: '',\r\n            phoneNum: '',\r\n            email: '',\r\n            agree: false,\r\n            contactType: 'By Phone',\r\n            feedback: '',\r\n            touched: {\r\n                firstName: false,\r\n                lastName: false,\r\n                phoneNum: false,\r\n                email: false\r\n            }\r\n        };\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n      \r\n\r\n    handleSubmit(values) {\r\n        console.log(\"Current state is: \" + JSON.stringify(values));\r\n        alert(\"Current state is: \" + JSON.stringify(values));\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <Breadcrumb>\r\n                            <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                            <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                        </Breadcrumb>\r\n                        <h2>Contact Us</h2>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row row-content align-items-center\">\r\n                    <div className=\"col-sm-4\">\r\n                        <h5>Our Address</h5>\r\n                        <address>\r\n                            1 Nucamp Way<br />\r\n                            Seattle, WA 98001<br />\r\n                            U.S.A.\r\n                        </address>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <a role=\"button\" className=\"btn btn-link\" href=\"tel:+12065551234\"><i className=\"fa fa-phone\" /> 1-206-555-1234</a><br />\r\n                        <a role=\"button\" className=\"btn btn-link\" href=\"mailto:fakeemail@fakeemail.co\"><i className=\"fa fa-envelope-o\" /> campsites@nucamp.co</a>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h2>Send us your Feedback</h2>\r\n                        <hr />\r\n                    </div>\r\n                    <div className=\"col-md-10\">\r\n                        <LocalForm onSubmit={values => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstName\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstName\" id=\"firstName\" name=\"firstName\"\r\n                                        placeholder=\"First Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, \r\n                                            minLength: minLength(2),\r\n                                            maxLength: maxLength(15)\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".firstName\"\r\n                                        show=\"touched\"\r\n                                        component=\"div\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be at least 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastName\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastName\" id=\"lastName\" name=\"lastName\"\r\n                                        placeholder=\"Last Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, \r\n                                            minLength: minLength(2),\r\n                                            maxLength: maxLength(15)\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".lastName\"\r\n                                        show=\"touched\"\r\n                                        component=\"div\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be at least 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"phoneNum\" md={2}>Phone</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".phoneNum\" id=\"phoneNum\" name=\"phoneNum\"\r\n                                        placeholder=\"Phone number\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required,\r\n                                            minLength: minLength(10),\r\n                                            maxLength: maxLength(15),\r\n                                            isNumber\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".phoneNum\"\r\n                                        show=\"touched\"\r\n                                        component=\"div\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be at least 10 numbers',\r\n                                            maxLength: 'Must be 15 numbers or less',\r\n                                            isNumber: 'Must be a number'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required,\r\n                                            validEmail\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".email\"\r\n                                        show=\"touched\"\r\n                                        component=\"div\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            validEmail: 'Invalid email address'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 4, offset: 2}}>\r\n                                    <div className=\"form-check\">\r\n                                        <Label check>\r\n                                            <Control.checkbox\r\n                                                model=\".agree\"\r\n                                                name=\"agree\"\r\n                                                className=\"form-check-input\"\r\n                                            /> {' '}\r\n                                            <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={4}>\r\n                                    <Control.select model=\".contactType\" name=\"contactType\"\r\n                                        className=\"form-control\">\r\n                                        <option>By Phone</option>\r\n                                        <option>By Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"feedback\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".feedback\" id=\"feedback\" name=\"feedback\"\r\n                                        rows=\"12\"\r\n                                        className=\"form-control\"\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 10, offset: 2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                        Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </LocalForm>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Contact;","C:\\Users\\zball\\Desktop\\NucampFolder\\3-React\\nucampsite-react\\src\\shared\\comments.js",[],"C:\\Users\\zball\\Desktop\\NucampFolder\\3-React\\nucampsite-react\\src\\shared\\partners.js",[],["111","112"],"C:\\Users\\zball\\Desktop\\NucampFolder\\3-React\\nucampsite-react\\src\\shared\\promotions.js",[],"C:\\Users\\zball\\Desktop\\NucampFolder\\3-React\\nucampsite-react\\src\\components\\AboutComponent.js",[],"C:\\Users\\zball\\Desktop\\NucampFolder\\3-React\\nucampsite-react\\src\\redux\\configureStore.js",[],"C:\\Users\\zball\\Desktop\\NucampFolder\\3-React\\nucampsite-react\\src\\redux\\campsites.js",[],"C:\\Users\\zball\\Desktop\\NucampFolder\\3-React\\nucampsite-react\\src\\redux\\comments.js",[],"C:\\Users\\zball\\Desktop\\NucampFolder\\3-React\\nucampsite-react\\src\\redux\\partners.js",[],"C:\\Users\\zball\\Desktop\\NucampFolder\\3-React\\nucampsite-react\\src\\redux\\promotions.js",[],"C:\\Users\\zball\\Desktop\\NucampFolder\\3-React\\nucampsite-react\\src\\redux\\ActionTypes.js",[],"C:\\Users\\zball\\Desktop\\NucampFolder\\3-React\\nucampsite-react\\src\\redux\\ActionCreators.js",[],{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","severity":1,"message":"118","line":9,"column":10,"nodeType":"119","messageId":"120","endLine":9,"endColumn":24},{"ruleId":"121","severity":1,"message":"122","line":77,"column":33,"nodeType":"123","endLine":77,"endColumn":116},{"ruleId":"121","severity":1,"message":"124","line":87,"column":33,"nodeType":"123","endLine":94,"endColumn":35},{"ruleId":"121","severity":1,"message":"125","line":108,"column":33,"nodeType":"123","endLine":110,"endColumn":35},{"ruleId":"117","severity":1,"message":"126","line":2,"column":10,"nodeType":"119","messageId":"120","endLine":2,"endColumn":16},{"ruleId":"117","severity":1,"message":"127","line":2,"column":18,"nodeType":"119","messageId":"120","endLine":2,"endColumn":29},{"ruleId":"117","severity":1,"message":"128","line":23,"column":7,"nodeType":"119","messageId":"120","endLine":23,"endColumn":25},{"ruleId":"121","severity":1,"message":"124","line":81,"column":37,"nodeType":"123","endLine":89,"endColumn":39},{"ruleId":"121","severity":1,"message":"124","line":106,"column":37,"nodeType":"123","endLine":114,"endColumn":39},{"ruleId":"121","severity":1,"message":"124","line":131,"column":37,"nodeType":"123","endLine":140,"endColumn":39},{"ruleId":"121","severity":1,"message":"124","line":158,"column":37,"nodeType":"123","endLine":165,"endColumn":39},{"ruleId":"121","severity":1,"message":"129","line":182,"column":45,"nodeType":"123","endLine":186,"endColumn":47},{"ruleId":"121","severity":1,"message":"122","line":192,"column":37,"nodeType":"123","endLine":193,"endColumn":66},{"ruleId":"121","severity":1,"message":"125","line":202,"column":37,"nodeType":"123","endLine":205,"endColumn":39},{"ruleId":"113","replacedBy":"130"},{"ruleId":"115","replacedBy":"131"},"no-native-reassign",["132"],"no-negated-in-lhs",["133"],"no-unused-vars","'RenderCampsite' is defined but never used.","Identifier","unusedVar","react/jsx-pascal-case","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE","'Navbar' is defined but never used.","'NavbarBrand' is defined but never used.","'mapDispatchToProps' is assigned a value but never used.","Imported JSX component checkbox must be in PascalCase or SCREAMING_SNAKE_CASE",["132"],["133"],"no-global-assign","no-unsafe-negation"]